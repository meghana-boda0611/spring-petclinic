pipeline {
    agent any

    environment {
        AWS_REGION = 'us-east-1'
    }

    stages {
        stage('Checkout Code') {
            steps {
                script {
                    checkout scm
                }
            }
        }

        stage('Setup Terraform') {
            steps {
                script {
                    withCredentials([[$class: 'AmazonWebServicesCredentialsBinding', credentialsId: 'AWS_Credentials']]) {
                        sh '''
                        export AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID
                        export AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY
                        echo "Current Directory:"
               	 	pwd  # Print current directory for debugging
                
                	echo "Listing Terraform Directory Contents:"
                	ls -l terraform/  # Ensure Terraform files exist
                
                	cd terraform  # Move into the Terraform directory
                
                	echo "Running Terraform Init..."
                	terraform init  # Initialize Terraform
                
                	echo "Terraform Version:"
                	terraform --version  # Check Terraform version after init
                        '''
                    }
                }
            }
        }

        stage('Plan Terraform') {
            steps {
                script {
                    sh '''
		    cd terraform
                    terraform plan -out=tfplan
                    '''
                }
            }
        }

        stage('Apply Terraform') {
            steps {
                script {
                    sh '''
		    cd terraform
                    terraform apply -auto-approve tfplan
                    '''
                }
            }
        }

        stage('Post Deployment Outputs') {
            steps {
                script {
                    sh '''
		    cd terraform
                    terraform output
                    '''
                }
            }
        }
    }
}

post {
    success {
        mail to: 'vivekmokkarala09@gmail.com',
             subject: "‚úÖ Jenkins Build Success: ${env.JOB_NAME} #${env.BUILD_NUMBER}",
             body: "The Jenkins build for ${env.JOB_NAME} #${env.BUILD_NUMBER} was successful.\nCheck details at ${env.BUILD_URL}"
    }
    failure {
        mail to: 'vivekmokkarala09@gmail.com',
             subject: "‚ùå Jenkins Build FAILED: ${env.JOB_NAME} #${env.BUILD_NUMBER}",
             body: "The Jenkins build for ${env.JOB_NAME} #${env.BUILD_NUMBER} has failed.\nCheck details at ${env.BUILD_URL}"
    }
    always {
        echo "üìß Email notification sent"
    }
}


